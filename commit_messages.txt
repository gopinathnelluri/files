GitHub Commit	Message	Guidelines
Borrowed	from	https://github.com/angular/
WHY? We	have	very	precise	rules	over	how	our	git	commit	messages	can	be	formatted.	
This	leads	to	more	readable	messages that	are	easy	to	follow	when	looking	through	
the	project	history.
FORMAT Must	be	one	of	the	following:
feat: A	new	feature
fix: A	bug	fix
docs: Documentation	only	changes
style: Changes	that	do	not	affect	the	meaning	of	the	code	(white-space,	formatting,	
missing	semi-colons,	etc.)
refactor: A	code	change	that	neither fixes	a	bug	nor	adds	a	feature
perf: A	code	change	that	improves	performance
test: Adding	missing	tests
chore: Changes	to	the	build	process	or	auxiliary	tools	and	libraries	such	as	
documentation	generation.
The	subject	contains	succinct	description	of	the	change:
1. use	the	imperative,	present	tense:	"change"	not	"changed"	nor	"changes"
2. don't	capitalize	first	letter
3. no	dot	(.)	at	the	end
EXAMPLES
feat(module-client):	add	bootstrap	to	the	styling
feat(module-api):	init	api	module
feat(module-api):	implement	user	authentication
test(module-client):	add	jasmine/karma	config
style(module-client):	format	JavaScript	code
refactor(module-client):	use	directory	structure	specified	by	John	Papa
docs(module-client):	update	readme	with	how	to	run
